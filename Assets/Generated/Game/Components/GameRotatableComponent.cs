//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public RotatableComponent rotatable { get { return (RotatableComponent)GetComponent(GameComponentsLookup.Rotatable); } }
    public bool hasRotatable { get { return HasComponent(GameComponentsLookup.Rotatable); } }

    public void AddRotatable(UnityEngine.Quaternion newRotationSpeed) {
        var index = GameComponentsLookup.Rotatable;
        var component = (RotatableComponent)CreateComponent(index, typeof(RotatableComponent));
        component.RotationSpeed = newRotationSpeed;
        AddComponent(index, component);
    }

    public void ReplaceRotatable(UnityEngine.Quaternion newRotationSpeed) {
        var index = GameComponentsLookup.Rotatable;
        var component = (RotatableComponent)CreateComponent(index, typeof(RotatableComponent));
        component.RotationSpeed = newRotationSpeed;
        ReplaceComponent(index, component);
    }

    public void RemoveRotatable() {
        RemoveComponent(GameComponentsLookup.Rotatable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherRotatable;

    public static Entitas.IMatcher<GameEntity> Rotatable {
        get {
            if (_matcherRotatable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Rotatable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherRotatable = matcher;
            }

            return _matcherRotatable;
        }
    }
}
