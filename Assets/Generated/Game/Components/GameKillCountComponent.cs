//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentContextApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameContext {

    public GameEntity killCountEntity { get { return GetGroup(GameMatcher.KillCount).GetSingleEntity(); } }
    public KillCountComponent killCount { get { return killCountEntity.killCount; } }
    public bool hasKillCount { get { return killCountEntity != null; } }

    public GameEntity SetKillCount(int newValue) {
        if (hasKillCount) {
            throw new Entitas.EntitasException("Could not set KillCount!\n" + this + " already has an entity with KillCountComponent!",
                "You should check if the context already has a killCountEntity before setting it or use context.ReplaceKillCount().");
        }
        var entity = CreateEntity();
        entity.AddKillCount(newValue);
        return entity;
    }

    public void ReplaceKillCount(int newValue) {
        var entity = killCountEntity;
        if (entity == null) {
            entity = SetKillCount(newValue);
        } else {
            entity.ReplaceKillCount(newValue);
        }
    }

    public void RemoveKillCount() {
        killCountEntity.Destroy();
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public KillCountComponent killCount { get { return (KillCountComponent)GetComponent(GameComponentsLookup.KillCount); } }
    public bool hasKillCount { get { return HasComponent(GameComponentsLookup.KillCount); } }

    public void AddKillCount(int newValue) {
        var index = GameComponentsLookup.KillCount;
        var component = (KillCountComponent)CreateComponent(index, typeof(KillCountComponent));
        component.Value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceKillCount(int newValue) {
        var index = GameComponentsLookup.KillCount;
        var component = (KillCountComponent)CreateComponent(index, typeof(KillCountComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveKillCount() {
        RemoveComponent(GameComponentsLookup.KillCount);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherKillCount;

    public static Entitas.IMatcher<GameEntity> KillCount {
        get {
            if (_matcherKillCount == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.KillCount);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherKillCount = matcher;
            }

            return _matcherKillCount;
        }
    }
}
